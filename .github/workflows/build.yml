name: amazonese-app-backend CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout no repositorio
        uses: actions/checkout@v3

      - name: Copiando o arquivo .env
        run: |
          cp .env.example .env

      - name: Substituindo variaveis de ambiente
        uses: franzbischoff/replace_envs@v1
        env:
          NODE_ENV: ${{ vars.NODE_ENV }}
          HTTP_PORTA: ${{ vars.HTTP_PORTA }}
          CIFRADOR_SENHAS_ALGORITMO: ${{ vars.CIFRADOR_SENHAS_ALGORITMO }}
          CIFRADOR_SENHAS_SEGREDO: ${{ vars.CIFRADOR_SENHAS_SEGREDO }}
          CIFRADOR_SENHAS_ITERACOES: ${{ vars.CIFRADOR_SENHAS_ITERACOES }}
          CIFRADOR_FRASES_SECRETAS_ALGORITMO: ${{ vars.CIFRADOR_FRASES_SECRETAS_ALGORITMO }}
          CIFRADOR_FRASES_SECRETAS_SEGREDO: ${{ vars.CIFRADOR_FRASES_SECRETAS_SEGREDO }}
          CIFRADOR_FRASES_SECRETAS_ITERACOES: ${{ vars.CIFRADOR_FRASES_SECRETAS_ITERACOES }}
          JWT_CHAVE: ${{ vars.JWT_CHAVE }}
          JWT_SUB: ${{ vars.JWT_SUB }}
          JWT_EXPIRACAO_EM_MINUTOS: ${{ vars.JWT_EXPIRACAO_EM_MINUTOS }}
          JWT_REFRESH_EXPIRACAO_EM_HORAS: ${{ vars.JWT_REFRESH_EXPIRACAO_EM_HORAS }}
          MYSQL_BANCODEDADOS: ${{ vars.MYSQL_BANCODEDADOS }}
          MYSQL_ENDERECO: ${{ vars.MYSQL_ENDERECO }}
          MYSQL_PORTA: ${{ vars.MYSQL_PORTA }}
          MYSQL_SENHA: ${{ vars.MYSQL_SENHA }}
          MYSQL_USUARIO: ${{ vars.MYSQL_USUARIO }}
        with:
          from_file: '.env'
          to_file: '.env'
          commit: 'false'

      - name: Configurando o Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '18.16.0'

      - name: Instalando dependencias e gerando a aplicacao
        run: |
          npm ci
          npm run build

      - name: Autenticacao no Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.AZURECR_ENDERECO }}
          username: ${{ vars.AZURECR_USUARIO }}
          password: ${{ vars.AZURECR_SENHA }}

      - name: Gerando a imagem e subindo para o Azure Container Registry
        run: |
          docker build -t ${{ vars.AZURECR_ENDERECO }}/amazonese-app-backend:${{ github.GITHUB_RUN_ID }} --build-arg HTTP_PORTA=${{ vars.HTTP_PORTA }} .
          docker push ${{ vars.AZURECR_ENDERECO }}/amazonese-app-backend:${{ github.GITHUB_RUN_ID }}
      
      - name: Implantando a nova versao da aplicacao
        uses: azure/webapps-deploy@v2
        with:
          app-name: '${{ vars.AZURE_WEBAPP_NOME }}'
          publish-profile: ${{ vars.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: '${{ vars.AZURECR_ENDERECO }}/amazonese-app-backend:${{ github.GITHUB_RUN_ID }}'
