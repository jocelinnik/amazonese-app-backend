name: amazonese-app-backend CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout no repositorio
        uses: actions/checkout@v3
      
      - run: |
        cp .env.example .env

      - name: Substituindo variaveis de ambiente
        uses: franzbischoff/replace_envs@v1
        env:
          NODE_ENV: ${{ env.NODE_ENV }}
          HTTP_PORTA: ${{ env.HTTP_PORTA }}
          CIFRADOR_SENHAS_SEGREDO: ${{ env.CIFRADOR_SENHAS_SEGREDO }}
          CIFRADOR_SENHAS_ITERACOES: ${{ env.CIFRADOR_SENHAS_ITERACOES }}
          JWT_CHAVE: ${{ env.JWT_CHAVE }}
          JWT_SUB: ${{ env.JWT_SUB }}
          JWT_EXPIRACAO_EM_MINUTOS: ${{ env.JWT_EXPIRACAO_EM_MINUTOS }}
          JWT_REFRESH_EXPIRACAO_EM_HORAS: ${{ env.JWT_REFRESH_EXPIRACAO_EM_HORAS }}
          MYSQL_BANCODEDADOS: ${{ env.MYSQL_BANCODEDADOS }}
          MYSQL_ENDERECO: ${{ env.MYSQL_ENDERECO }}
          MYSQL_PORTA: ${{ env.MYSQL_PORTA }}
          MYSQL_SENHA: ${{ env.MYSQL_SENHA }}
          MYSQL_USUARIO: ${{ env.MYSQL_USUARIO }}
        with:
          from_file: '.env'
          to_file: '.env'
          commit: 'false'

      - name: Configurando o Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '18.16.0'

      - name: Instalando dependencias e gerando a aplicacao
        run: |
          npm ci
          npm run build --if-present

      - name: Autenticacao no Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURECR_ENDERECO }}
          username: ${{ env.AZURECR_USUARIO }}
          password: ${{ env.AZURECR_SENHA }}
      
      - run: |
        docker build -t ${{ env.AZURECR_ENDERECO }}/amazonese-app-backend:${{ github.sha }} --build-arg HTTP_PORTA=${{ env.HTTP_PORTA }} .
        docker push ${{ env.AZURECR_ENDERECO }}/amazonese-app-backend:${{ github.sha }}
